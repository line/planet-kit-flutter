/**
 * @file planetkit_subgrp.h
 * @brief write some brief information here.
 *
 * @date 2021-07-07
 *
 * Generated by author
 *
 */
#ifndef __PLANETKIT_SUBGRP_H__
#define __PLANETKIT_SUBGRP_H__

/*************************************************************************
* INCLUDE
*************************************************************************/
#include "planetkit_common_type.h"
#include "planetkit_peer.h"
#include "planetkit_data_sess.h"

#if defined(__cplusplus)
extern "C" {
#endif
/*************************************************************************
* DATA STRUCTURE
*************************************************************************/

typedef struct planetkit_subgroup_attribute_t {
    planetkit_subgroup_peer_update_type_e   peer_update_type;
    kit_bool_t                              enable_video_update;
    kit_bool_t                              use_data_sess;
} planetkit_subgroup_attribute_t;

typedef struct planetkit_peers_iter planetkit_peers_iter_t;

/*************************************************************************
* API DEFINITION
*************************************************************************/
kit_bool_t  planetkit_subgroup_retain(planetkit_subgroup_t * NONNULL subgrp);
void        planetkit_subgroup_release(planetkit_subgroup_t * NONNULL subgrp);

planetkit_str_t NULLABLE planetkit_subgroup_get_name(planetkit_subgroup_t * NONNULL subgrp);
planetkit_subgroup_attribute_t * NONNULL planetkit_subgroup_get_attribute(planetkit_subgroup_t * NONNULL subgrp);

kit_bool_t  planetkit_subgroup_silence_peers_audio(planetkit_subgroup_t *NONNULL subgrp, kit_bool_t silence,
                                                   void *NULLABLE result_handler_user, planetkit_result_handler_t NULLABLE result_handler);
kit_bool_t  planetkit_subgroup_is_silenced(planetkit_subgroup_t * NONNULL subgrp);

kit_bool_t  planetkit_subgroup_is_peers_audio_auto_volume_control_focused(planetkit_subgroup_t * NONNULL subgrp);

uint32_t    planetkit_subgroup_get_total_peers_count(planetkit_subgroup_t * NONNULL subgrp);
planetkit_peer_t * NULLABLE planetkit_subgroup_get_peer(planetkit_subgroup_t * NONNULL subgrp,
                                                        planetkit_str_t NONNULL peer_id, planetkit_str_t NONNULL peer_service_id);

/**
 * Obtain the count of peers that managed by the room server
 */
uint32_t    planetkit_subgroup_get_total_peers_cnt(planetkit_subgroup_t * NONNULL subgrp);

/**
 * Data session API set
 */
kit_bool_t  planetkit_subgroup_make_outbound_data_session(planetkit_subgroup_t *NONNULL subgrp, planetkit_data_session_outbound_create_param_t *NONNULL create_param);
kit_bool_t  planetkit_subgroup_make_inbound_data_session(planetkit_subgroup_t *NONNULL subgrp, planetkit_data_session_inbound_create_param_t *NONNULL create_param);

kit_bool_t  planetkit_subgroup_unsupport_inbound_data_session(planetkit_subgroup_t *NONNULL subgrp, planetkit_data_session_stream_id_t stream_id);

/**
  * SUBGROUP PEERS LIST ITERATION IS NOT THREAD-SAFE!!!
  * List can be altered during the iteration if it is not done within the processor of
  * PLANETKIT_EVENT_TYPE_CONF_SUBGRP_PEER_UPDATED or PLANETKIT_EVENT_TYPE_CONF_SUBGRP_VIDEO_UPDATED event.
  */
 planetkit_peers_iter_t * NULLABLE planetkit_subgroup_get_peers_head(planetkit_subgroup_t * NONNULL subgrp);
 planetkit_peers_iter_t * NULLABLE planetkit_peers_iter_get_next(planetkit_subgroup_t * NONNULL subgrp, planetkit_peers_iter_t * NONNULL iter);
 planetkit_peer_t * NULLABLE planetkit_peers_iter_get_peer(planetkit_peers_iter_t * NONNULL iter);

#if defined(__cplusplus)
}
#endif
#endif /* __PLANETKIT_SUBGRP_H__ */
